name: Publish Python Package to PyPI
on:
  workflow_dispatch:
#  push:
#    branches:
#      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Get version from pyproject.toml
      id: get-version
      run: |
        VERSION=$(uv run python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Found version: $VERSION"

    - name: Build package
      run: make package-build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  create-release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ needs.build.outputs.version }}
        release_name: Release v${{ needs.build.outputs.version }}
        draft: false
        prerelease: false

  publish:
    runs-on: ubuntu-latest
    needs: [build, create-release]
    permissions:
      # IMPORTANT: this permission is mandatory for Trusted Publishing
      id-token: write
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
